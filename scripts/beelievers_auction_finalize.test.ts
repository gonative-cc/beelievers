import { test, expect, describe } from "bun:test";

import { batchAddresses, preprocessAddresses } from "./beelievers_auction_finalize";

describe("preprocess Address | sort and validate address", () => {
	test("preprocess happy case", () => {
		expect(
			preprocessAddresses([
				"0x1000000000000000000000000000000000000000000000000000000000000000",
				"0x0000000000000000000000000000000000000000000000000000000000000000",
				"0x0000000000000000000000000000000000000000000000000000000000000001",
			]),
		).toStrictEqual([
			"0x0000000000000000000000000000000000000000000000000000000000000000",
			"0x0000000000000000000000000000000000000000000000000000000000000001",
			"0x1000000000000000000000000000000000000000000000000000000000000000",
		]);
	});

	test("preprocess failed case", () => {
		expect(() =>
			preprocessAddresses([
				"0x100000000000000000000000000000000000000000000000000000",
				"0x0000000000000000000000000000000000000000000000000000000000000000",
				"0x0000000000000000000000000000000000000000000000000000000000000001",
			]),
		).toThrow("invalid sui address in finalize list");
	});
	test("sorts single address", () => {
		const addr = "0x1000000000000000000000000000000000000000000000000000000000000000";
		expect(preprocessAddresses([addr])).toStrictEqual([addr]);
	});
});

describe("batchAddresses tests", () => {
	test("batchAddresses happy case", () => {
		expect(
			batchAddresses(
				preprocessAddresses([
					"0x1000000000000000000000000000000000000000000000000000000000000000",
					"0x0000000000000000000000000000000000000000000000000000000000000000",
					"0x0000000000000000000000000000000000000000000000000000000000000001",
				]),
				2,
			),
		).toStrictEqual([
			[
				"0x0000000000000000000000000000000000000000000000000000000000000000",
				"0x0000000000000000000000000000000000000000000000000000000000000001",
			],
			["0x1000000000000000000000000000000000000000000000000000000000000000"],
		]);

		// empty
		expect(batchAddresses([], 10)).toStrictEqual([])
	});


	test("batch single addresses", () => {
		const addr = "0x1000000000000000000000000000000000000000000000000000000000000000";
		expect(batchAddresses([addr], 1)).toStrictEqual([[addr]]);
		expect(batchAddresses([addr], 2)).toStrictEqual([[addr]]);
	});
});
